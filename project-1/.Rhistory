library(tidyverse)
package(tidyverse)
install.packages("ggplot2")
install.packages("tidyverse")
install.packages("shiny")
shinyApp=(ui=ui, server=server)
shinyApp=(ui = ui, server = server)
package(shiny)
ui <- fluidPage("Hello World")
server <- function(input,output) {}
shinyApp=(ui = ui, server = server)
server <- function(input, output) {}
shinyApp=(ui = ui, server = server)
package(shiny)
shinyApp=(ui = ui, server = server)
ui <- fluidPage("Hello World") %<%
server <- function(input, output) {}%<%
shinyApp=(ui = ui, server = server)%<%
ui <- fluidPage("Hello World")
library(readr)
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(lubridate)
library(shiny)
library(treemap)
products <- read_csv("/Users/Jessika/Dropbox/Instacart/produkter.csv")
View(products)
dataselected <- dataselected %>%
filter(EAN %in% products$EAN)
cxt_ui <- function(id, width = "100%", height = "350px", configuration, ...) {
ns <- NS(id)
tagList(
div(class = "module-wrapper", id = ns("menu"),
fluidRow(
column(12,
div(selectInput(ns("period"), "Time period", choices = period_choices, width = "180px"), class = "dropdown"),
div(selectInput(ns("group"), "Grouping", choices = group_choices, width = "180px"),class = "dropdown"),
div(selectInput(ns("selection"), "Selection", choices = NULL, width = "270px"), class = "dropdown")
)
),
hr(style="margin-bottom: 5px;"),
fluidRow(
column(3,
box(
box_head(1, "CUSTOMER EXPERIENCE SCORE"),
div(style = " width: 100%",
div(style = "display: inline-block;  margin: 10px 30px 10px 10px",
highchartOutput(ns("cxScore"), height = "120px", width = "120px")
),
div(style = "display: inline-block; text-align: right; position: relative; margin-top: 30px; float:right;",
tagList(
#ranking_text("12", "45"),
br(), br(),
uiOutput(ns("cxArrow")),
comparison_text(textOutput(ns("cxBench"), inline = TRUE), textOutput(ns("cxLast"), inline = TRUE))
)
)
),
box_foot(div("CX Score (0 - 100)", span(span("benchmark", style = "font-weight: bold;"), "(last period)", style = "float: right;"), style = "padding: 5px 0px;")),
box_foot(""),
div(highchartOutput(ns("cxScoreTrend"), height = "200px"))
)
),
column(3,
box(
box_head(2, "NET PROMOTER SCORE"),
div(style = "width: 100%",
div(style = "display: inline-block;  margin: 10px 30px 10px 10px",
highchartOutput(ns("nps"), width = "120px", height = "120px")),
div(style = "display: inline-block; text-align: right; position: relative; margin-top: 30px; float:right;",
tagList(
#ranking_text("15", "45"),
br(),
br(),
uiOutput(ns("npsArrow")),
comparison_text(textOutput(ns("npsBench"), inline = TRUE), textOutput(ns("npsLast"), inline = TRUE))
)
)
),
box_foot(div("NPS (-100 - 100)", span(span("benchmark", style = "font-weight: bold;"), "(last period)", style = "float: right;"), style = "padding: 5px 0px;")),
box_foot(""),
div(highchartOutput(ns("npsTrend"), height = "200px"))
)
),
column(6,
box(
box_head(3, "CUSTOMER EXPERIENCE FACTORS"),
div(plotOutput(ns("storeExperience"), height = "360px"), style = "width: 95%; display: inline-block; ")
)
)
),
fluidRow(
column(3,
box(
box_foot("")
)
),
column(3,
box(
box_foot("")
)
),
column(6,
box(
box_foot(""),
div(style = "text-align: center;", htmlOutput(ns("legend")))
)
)
)
),
div(class = "module-footer",
span(uiOutput(ns("base"), inline = TRUE), style = "font-size: 12px;"),
div(tipify(downloadLink(ns("download"), label = icon("download"), class = "icon_btn"), title = "Export data", placement = "top"), class = "downloader"),
#div(tipify(downloadLink(ns("manual"), label = icon("info-circle"), class = "icon_btn"), title = "Download manual", placement = "top"), class = "downloader"),
div(tipify(span(id = ns("reset"), icon("refresh"), class = "action-button icon_btn"), title = "Reset all filters", placement = "top"), class = "resetter")
)
)
}
library("dplyr")
# load data for men
library("mfp")
install.packages("mfp")
data("bodyfat")
data("bodyfat")
library("TH.data")
data("bodyfat")
install.packages("TH.data")
# load packages
library("dplyr")
library("TH.data")
library("mfp")
# load data for women
data("bodyfat")
# load data for men
data("bodyfat")
# load packages
library("dplyr")
library("TH.data")
library("mfp")
# load data for women
data("bodyfat")
# load data for men
data("bodyfat")
library("dplyr")
# load data for women
library("TH.data")
data("bodyfat")
library("dplyr")
# load data for women
library("TH.data")
data("bodyfat")
women <- dataselected %>%
select(age, DEXfat, waistcirc, hipcirc, elbowbreadth, kneebreadth)
women <- women %>%
select(age, DEXfat, waistcirc, hipcirc, elbowbreadth, kneebreadth)
women <- women %>%
select(age, DEXfat, waistcirc, hipcirc, elbowbreadth, kneebreadth)
library("tidyverse")
install.packages("tidyverse")
library("dplyr")
library("tidyverse")
# load data for women
library("TH.data")
data("bodyfat")
# load packages
library("dplyr")
library("tidyverse")
# load data for women
library("TH.data")
data("bodyfat")
library("TH.data")
women <- data("bodyfat")
help(data)
women <- data("bodyfat") %>%
View(bodyfat)
women <- data("bodyfat") %>%
view(bodyfat)
women <- data("bodyfat")
library("dplyr")
library("tidyverse")
# load data for women
library("TH.data")
women <- data("bodyfat")
library("mfp")
data("bodyfat")
library("TH.data")
women <- data("bodyfat")
library("dplyr")
library("tidyverse")
# load data for women
library("TH.data")
data("bodyfat")
women <- bodyfat
women <- bodyfat
# load data for men
library("mfp")
data("bodyfat")
men <- bodyfat
install.packages("car")
library("car")
library("dplyr")
library("tidyverse")
library("corrplot")
library("car")
library("dplyr")
library("tidyverse")
library("corrplot")
setwd("/Users/Jessika/Documents/GitHub/SF2930-projects/project-1")
# load data for men
men <- read.csv("bodyfatmen.csv")
#create response variable using Siris Equation
men$bfm <- c(495/(men$density)-450)
# load packages
library("car")
library("dplyr")
library("tidyverse")
library("corrplot")
setwd("/Users/Jessika/Documents/GitHub/SF2930-projects/project-1")
# load data for men
men <- read.csv("bodyfatmen.csv")
#create response variable using Siris Equation
men$bfm <- c(495/(men$density)-450)
View(men)
# load packages
library("car")
library("dplyr")
library("tidyverse")
library("corrplot")
setwd("/Users/Jessika/Documents/GitHub/SF2930-projects/project-1")
# load data for men
men <- read.csv("bodyfatmen.csv")
#create response variable using Siris Equation
#men$bfm <- c(495/(men$density)-450)
#transform weight from pounds to kg
men$weight <- c(453.6*men$weight)
men$height <- c(2.54*men$height)
model_men <- lm(density ~ ., data = men)
anova(model_men)
summary(model_men)
plot(model_men)
men$weight <- c(0.01*453.6*men$weight)
men$height <- c(2.54*men$height)
men <- read.csv("bodyfatmen.csv")
#transform weight from pounds to kg
men$weight <- c(0.01*453.6*men$weight)
men$height <- c(2.54*men$height)
men <- read.csv("bodyfatmen.csv")
#transform weight from pounds to kg
men$weight <- c(0.001*453.6*men$weight)
men$height <- c(2.54*men$height)
men <- read.csv("bodyfatmen.csv")
#transform weight from pounds to kg
men$weight <- c(0.001*453.6*men$weight)
men$height <- c(2.54*0.001*men$height)
# load data for men
men <- read.csv("bodyfatmen.csv")
#transform weight from pounds to kg
men$weight <- c(0.001*453.6*men$weight)
men$height <- c(2.54*0.01*men$height)
# load data for men
men <- read.csv("bodyfatmen.csv")
#transform weight from pounds to kg
men$weight <- c(0.001*453.6*men$weight)
men$height <- c(2.54*0.01*men$height)
men$neck <- c(0.01*men$height)
men$chest <- c(0.01*men$chest)
men <- read.csv("bodyfatmen.csv")
#transform weight from pounds to kg
men$weight <- c(0.001*453.6*men$weight)
men$height <- c(2.54*0.01*men$height)
men$neck <- c(0.01*men$neck)
men$chest <- c(0.01*men$chest)
men <- read.csv("bodyfatmen.csv")
#transform weight from pounds to kg
men$weight <- c(0.001*453.6*men$weight)
men$height <- c(2.54*0.01*men$height)
men$neck <- c(0.01*men$neck)
men$chest <- c(0.01*men$chest)
men$abdomen <- c(0.01*men$abdomen)
men$hip <- c(0.01*men$hip)
men$thigh <- c(0.01*men$thigh)
men$knee <- c(0.01*men$knee)
# load data for men
men <- read.csv("bodyfatmen.csv")
#transform weight from pounds to kg
men$weight <- c(0.001*453.6*men$weight)
men$height <- c(2.54*0.01*men$height)
men$neck <- c(0.01*men$neck)
men$chest <- c(0.01*men$chest)
men$abdomen <- c(0.01*men$abdomen)
men$hip <- c(0.01*men$hip)
men$thigh <- c(0.01*men$thigh)
men$knee <- c(0.01*men$knee)
men$ankle <- c(0.01*men$ankle)
men$biceps <- c(0.01*men$biceps)
men$forearm <- c(0.01*men$forearm)
men$wrist <- c(0.01*men$wrist)
#fit model to data
model_men <- lm(density ~ ., data = men)
View(model_men)
anova(model_men)
summary(model_men)
plot(model_men)
#visualize correlation between different explanatory variables
men %>%
dplyr::select(bfm,age,weight,height,neck,chest,abdomen,hip,thigh,knee,ankle,biceps,forearm,wrist) %>%
cor %>%
corrplot.mixed()
#visualize correlation between different explanatory variables
men %>%
dplyr::select(age,weight,height,neck,chest,abdomen,hip,thigh,knee,ankle,biceps,forearm,wrist) %>%
cor %>%
corrplot.mixed()
X <- data.matrix(bodyfat, rownames.force = NA)
X_prim <- t(X)
X_corr <- X_prim %*% X
eigen <- eigen(X_corr, symmetric = TRUE, only.values = FALSE, EISPACK = FALSE)
lambda_max <- max(eigen$values)
lambda_min <- min(eigen$values)
k <- lambda_max %/% lambda_min
X <- data.matrix(men, rownames.force = NA)
X_prim <- t(X)
X_corr <- X_prim %*% X
eigen <- eigen(X_corr, symmetric = TRUE, only.values = FALSE, EISPACK = FALSE)
lambda_max <- max(eigen$values)
lambda_min <- min(eigen$values)
k <- lambda_max %/% lambda_min
install.packages("leaps")
#Model selection mha leaps
leaps=regsubsets(density ~ ., data = men, nbest=10)
library("leaps")
library("leaps")
#Model selection mha leaps
leaps = regsubsets(density ~ ., data = men, nbest=10)
View(leaps)
plot(leaps, scale="adjr2")
# load data for men
men <- read.csv("bodyfatmen.csv")
#transform to SI units
men$weight <- c(0.001*453.6*men$weight)
men$height <- c(2.54*0.01*men$height)
men$neck <- c(0.01*men$neck)
men$chest <- c(0.01*men$chest)
men$abdomen <- c(0.01*men$abdomen)
men$hip <- c(0.01*men$hip)
men$thigh <- c(0.01*men$thigh)
men$knee <- c(0.01*men$knee)
men$ankle <- c(0.01*men$ankle)
men$biceps <- c(0.01*men$biceps)
men$forearm <- c(0.01*men$forearm)
men$wrist <- c(0.01*men$wrist)
#fit model to data
model_men <- lm(density ~ ., data = men)
anova(model_men)
summary(model_men)
plot(model_men)
#Remove row 39, which is deemed to be an outler
men <- head(men[ -c(39), ])
# load data for men
men <- read.csv("bodyfatmen.csv")
#transform to SI units
men$weight <- c(0.001*453.6*men$weight)
men$height <- c(2.54*0.01*men$height)
men$neck <- c(0.01*men$neck)
men$chest <- c(0.01*men$chest)
men$abdomen <- c(0.01*men$abdomen)
men$hip <- c(0.01*men$hip)
men$thigh <- c(0.01*men$thigh)
men$knee <- c(0.01*men$knee)
men$ankle <- c(0.01*men$ankle)
men$biceps <- c(0.01*men$biceps)
men$forearm <- c(0.01*men$forearm)
men$wrist <- c(0.01*men$wrist)
#Remove row 39, which is deemed to be an outler
men <- head(men[ -c(39), ])
function (file, header = TRUE, sep = ",", quote = "\"", dec = ".",
fill = TRUE, comment.char = "", ...)
# load data for men
men <- read.csv("bodyfatmen.csv")
#Remove row 39, which is deemed to be an outler
men <- men[ -c(39), ]
# load data for men
men <- read.csv("bodyfatmen.csv")
#Remove row 39, which is deemed to be an outler
men <- men[-c(39),]
model_men <- lm(density ~ ., data = men)
anova(model_men)
summary(model_men)
plot(model_men)
# load data for men
men <- read.csv("bodyfatmen.csv")
men$weight <- c(0.001*453.6*men$weight)
men$height <- c(2.54*0.01*men$height)
men$neck <- c(0.01*men$neck)
men$chest <- c(0.01*men$chest)
men$abdomen <- c(0.01*men$abdomen)
men$hip <- c(0.01*men$hip)
men$thigh <- c(0.01*men$thigh)
men$knee <- c(0.01*men$knee)
men$ankle <- c(0.01*men$ankle)
men$biceps <- c(0.01*men$biceps)
men$forearm <- c(0.01*men$forearm)
men$wrist <- c(0.01*men$wrist)
#Remove row 39, which is deemed to be an outler
men <- men[-c(39),]
#fit model to data
model_men <- lm(density ~ ., data = men)
anova(model_men)
summary(model_men)
plot(model_men)
men <- read.csv("bodyfatmen.csv")
#transform to SI units
men$weight <- c(0.001*453.6*men$weight)
men$height <- c(2.54*0.01*men$height)
men$neck <- c(0.01*men$neck)
men$chest <- c(0.01*men$chest)
men$abdomen <- c(0.01*men$abdomen)
men$hip <- c(0.01*men$hip)
men$thigh <- c(0.01*men$thigh)
men$knee <- c(0.01*men$knee)
men$ankle <- c(0.01*men$ankle)
men$biceps <- c(0.01*men$biceps)
men$forearm <- c(0.01*men$forearm)
men$wrist <- c(0.01*men$wrist)
test <- df[sample(nrow(men), 50), ]
test <- men[sample(nrow(men), 50), ]
men <- read.csv("bodyfatmen.csv")
#transform to SI units
men$weight <- c(0.001*453.6*men$weight)
men$height <- c(2.54*0.01*men$height)
men$neck <- c(0.01*men$neck)
men$chest <- c(0.01*men$chest)
men$abdomen <- c(0.01*men$abdomen)
men$hip <- c(0.01*men$hip)
men$thigh <- c(0.01*men$thigh)
men$knee <- c(0.01*men$knee)
men$ankle <- c(0.01*men$ankle)
men$biceps <- c(0.01*men$biceps)
men$forearm <- c(0.01*men$forearm)
men$wrist <- c(0.01*men$wrist)
train <- men[sample(nrow(men), 200), ]
write.csv(train, file = "train.csv")
# load data for men
men <- read.csv("bodyfatmen.csv")
men$weight <- c(0.001*453.6*men$weight)
men$height <- c(2.54*0.01*men$height)
men$neck <- c(0.01*men$neck)
men$chest <- c(0.01*men$chest)
men$abdomen <- c(0.01*men$abdomen)
men$hip <- c(0.01*men$hip)
men$thigh <- c(0.01*men$thigh)
men$knee <- c(0.01*men$knee)
men$ankle <- c(0.01*men$ankle)
men$biceps <- c(0.01*men$biceps)
men$forearm <- c(0.01*men$forearm)
men$wrist <- c(0.01*men$wrist)
train <- sample_frac(men, 0.8)
View(test)
sid <- as.numeric(rownames(train))
test <- men[-sid,]
write.csv(train, file = "train.csv")
write.csv(test, file = "test.csv")
men <- read.csv("test.csv")
men <- read.csv("train.csv")
#fit linear model to data
model_men <- lm(density ~ ., data = men)
anova(model_men)
summary(model_men)
plot(model_men)
View(train)
View(train)
View(train)
View(train)
plot(model_men)
#Remove row 39, which is deemed to be an outler
men <- men[-c(30, 102),]
#fit linear model to data AGAIN
model_men <- lm(density ~ ., data = men)
anova(model_men)
summary(model_men)
#visualize correlation between different explanatory variables
men %>%
dplyr::select(age,weight,height,neck,chest,abdomen,hip,thigh,knee,ankle,biceps,forearm,wrist) %>%
cor %>%
corrplot.mixed()
#Spectral Decmoposition (ORIGIANAL DATASET)
X <- data.matrix(men, rownames.force = NA)
X_prim <- t(X)
X_corr <- X_prim %*% X
eigen <- eigen(X_corr, symmetric = TRUE, only.values = FALSE, EISPACK = FALSE)
lambda_max <- max(eigen$values)
lambda_min <- min(eigen$values)
k <- lambda_max %/% lambda_min
#Model selection mha leaps
#Vi kan använda oss av leaps (istället för backward/forward selection) pga antalet modeller är förhållandevis lågt 2^K
leaps = regsubsets(density ~ ., data = men, nbest=10)
plot(leaps, scale="adjr2")
View(leaps)
View(leaps)

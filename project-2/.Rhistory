n.levels <- nlevels(glmdata2[[rating.factor]])
contrasts(glmdata2[[rating.factor]]) <- contr.treatment(n.levels)[rank(-sums, ties.method = "first"), ]
data.frame(duration = sums, n.claims = nclaims)
}
glmdata3 <- cbind(glmdata3, new.cols)
rm(new.cols)
glmdata2$NoOfClaims[glmdata2$ActivityCode == "I - Transport, storage and communication"]
sum(glmdata2$NoOfClaims[glmdata2$ActivityCode == "I - Transport, storage and communication"])
sum(glmdata2$NoOfClaims[glmdata2$ActivityCode == "L - Public administration and defence; compulsory social security
"])
sum(glmdata2$NoOfClaims[glmdata2$ActivityCode == "L - Public administration and defence; compulsory social security"])
sum(glmdata2$NoOfClaims[glmdata2$ActivityCode == "G - Wholesale & retail trade; repair of motor vehicles, household"])
sum(glmdata2$NoOfClaims[glmdata2$weight_group == "01_<1000kg"])
model.frequency <-
glm(NoOfClaims ~ weight_group + Climate + ActivityCode + offset(log(Duration)),
data = glmdata2, family = poisson)
model.frequency <-
glm(NoOfClaims ~ weight_group + Climate + ActivityCode + age_group + offset(log(Duration)),
data = glmdata2, family = poisson)
rels <- coef(model.frequency)
rels <- exp(rels[1] + rels[-1])/exp(rels[1])
glmdata3$rels.frequency <-
c(c(1, rels[1:5])[rank(-glmdata3$duration[1:6], ties.method = "first")],
c(1, rels[6:7])[rank(-glmdata3$duration[7:9], ties.method = "first")],
c(1, rels[8:17])[rank(-glmdata3$duration[10:20], ties.method = "first")],
c(1, rels[18:22])[rank(-glmdata3$duration[21:26], ties.method = "first")],)
glmdata3$rels.frequency <-
c(c(1, rels[1:5])[rank(-glmdata3$duration[1:6], ties.method = "first")],
c(1, rels[6:7])[rank(-glmdata3$duration[7:9], ties.method = "first")],
c(1, rels[8:17])[rank(-glmdata3$duration[10:20], ties.method = "first")],
c(1, rels[18:22])[rank(-glmdata3$duration[21:26], ties.method = "first")])
glmdata2$avgclaim=glmdata2$ClaimCost/glmdata2$NoOfClaims
model.severity <-
glm(avgclaim ~ weight_group + Climate + ActivityCode + age_group,
data = glmdata2[glmdata2$avgclaim>0,], family = Gamma("log"), weight=NoOfClaims)
rels <- coef(model.severity)
rels <- exp( rels[1] + rels[-1] ) / exp( rels[1] )
glmdata3$rels.severity <-
c(c(1, rels[1:5])[rank(-glmdata3$duration[1:6], ties.method = "first")],
c(1, rels[6:7])[rank(-glmdata3$duration[7:9], ties.method = "first")],
c(1, rels[8:17])[rank(-glmdata3$duration[10:20], ties.method = "first")],
c(1, rels[18:22])[rank(-glmdata3$duration[21:26], ties.method = "first")]))
glmdata3$rels.severity <-
c(c(1, rels[1:5])[rank(-glmdata3$duration[1:6], ties.method = "first")],
c(1, rels[6:7])[rank(-glmdata3$duration[7:9], ties.method = "first")],
c(1, rels[8:17])[rank(-glmdata3$duration[10:20], ties.method = "first")],
c(1, rels[18:22])[rank(-glmdata3$duration[21:26], ties.method = "first")])
help(glm)
# Finally, the final risk factor is calculated, as the product of the frequency and severity factors.
##### You should not have to modify this coed.
##### Congratulations! You now have a model for the risk!
glmdata3$rels.risk <- with(glmdata3, rels.frequency*rels.severity)
help(with)
# First, long variable names need to be cut, to fit into the plots.
# This row of code cuts away everything except for the first letter for variable names belonging to activity codes.
##### If you have long variable names, modify here to cut them.
glmdata3[glmdata3$rating.factor == "ActivityCode",2] <- substr(glmdata3$class,1,1)[10:20]
p1 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=1) +theme(axis.text.x = element_text(angle = 30, hjust = 1))
help(ggplot::subset)
help(ggplot)
p2 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)+theme(axis.text.x = element_text(angle = 30, hjust = 1))
p3 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=1.6)+theme(axis.text.x = element_text(angle = 30, hjust = 1))
p4 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=0.05)
p5 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.1)
p6 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=0.1)
p7 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=0.5)
p8 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)
p9 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=0.5)
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,p9, cols=3)
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,p9, cols=3)
p1 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=1) +theme(axis.text.x = element_text(angle = 30, hjust = 1))
p2 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)+theme(axis.text.x = element_text(angle = 30, hjust = 1))
p3 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=1.6)+theme(axis.text.x = element_text(angle = 30, hjust = 1))
p4 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=0.05)
p5 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.1)
p6 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=0.1)
p7 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=0.5)
p8 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)
p9 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=0.5)
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,p9, cols=3)
update.packages("ggplot2")
library(ggplot2)
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,p9, cols=3)
install.packages("scater")
R.Version()
source("https://bioconductor.org/biocLite.R")
biocLite("scater")
p10 <- ggplot(subset(glmdata3, rating.factor=="Age"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Age: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=0.5)
p11 <- ggplot(subset(glmdata3, rating.factor=="Agg"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Age: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)
p12 <- ggplot(subset(glmdata3, rating.factor=="Age"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Age: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=0.5)
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12, cols=4)
library(scater)
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12, cols=4)
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12, cols=4, rows=3)
p11 <- ggplot(subset(glmdata3, rating.factor=="Age"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Age: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12, cols=4)
length(which(glmdata$weight_group == "06_>=5000kg"))
length(which(glmdata$weight_group == "01_<1000kg"))
length(which(glmdata$weight_group == "02_1000-1999kg"))
length(which(glmdata$weight_group == "03_2000-2999kg"))
length(which(glmdata$weight_group == "04_3000-3999kg"))
length(which(glmdata$weight_group == "05_4000-4999kg"))
glmdata$weight_group <- cut(glmdata$Weight,
breaks = c(-Inf, 500, 1000, 2000, 3000, 4000, 5000, Inf),
labels = c("00_<500kg", "01_500-1000kg", "02_1000-1999kg", "03_2000-2999kg", "04_3000-3999kg", "05_4000-4999kg", "06_>=5000kg"),
right = FALSE)
length(which(glmdata$weight_group == "00_<500kg"))
length(which(glmdata$weight_group == "01_500-1000kg"))
setwd("/Users/Jessika/Documents/GitHub/SF2930-projects/project-2")
glmdata <- read.table("Tractors.csv", header=TRUE, sep=";", dec="," )
glmdata$weight_group <- cut(glmdata$Weight,
breaks = c(-Inf, 500, 1000, 2000, 3000, 4000, 5000, Inf),
labels = c("00_<500kg", "01_500-1000kg", "02_1000-1999kg", "03_2000-2999kg", "04_3000-3999kg", "05_4000-4999kg", "06_>=5000kg"),
right = FALSE)
glmdata$age_group <- cut(glmdata$VehicleAge,
breaks = c(-Inf, 2, 5, 10, 15, 20, 30, Inf),
labels = c("00_<2yr", "01_3-5yr", "02_5-10yr", "03_10-15yr", "04_15-20yr", "05_20-30yr", "06_>=30yr"),
right = FALSE)
# Det enda man behöver öndra här är s.a. man skickar med den nya feature:n
glmdata2 <- aggregate(glmdata[,6:8],by=list(weight_group = glmdata$weight_group,
age_group = glmdata$age_group,
Climate = glmdata$Climate,
ActivityCode = glmdata$ActivityCode), FUN=sum, na.rm=TRUE)
glmdata3 <-
data.frame(rating.factor =
c(rep("Weight", nlevels(glmdata2$weight_group)),
rep("Climate", nlevels(glmdata2$Climate)),
rep("ActivityCode", nlevels(glmdata2$ActivityCode)),
rep("Age", nlevels(glmdata2$age_group))),
class =
c(levels(glmdata2$weight_group),
levels(glmdata2$Climate),
levels(glmdata2$ActivityCode),
levels(glmdata2$age_group)),
stringsAsFactors = FALSE)
# nclaims: antalet claims för traktorer som uppfyller radegenskapen
# sums: summan av försäkringstiden för traktorer som uppfyller radegenskapen
new.cols <-
foreach (rating.factor = c("weight_group", "Climate", "ActivityCode", "age_group"),
.combine = rbind) %do%
{
nclaims <- tapply(glmdata2$NoOfClaims, glmdata2[[rating.factor]], sum)
sums <- tapply(glmdata2$Duration, glmdata2[[rating.factor]], sum)
n.levels <- nlevels(glmdata2[[rating.factor]])
contrasts(glmdata2[[rating.factor]]) <- contr.treatment(n.levels)[rank(-sums, ties.method = "first"), ]
data.frame(duration = sums, n.claims = nclaims)
}
glmdata3 <- cbind(glmdata3, new.cols)
rm(new.cols)
glmdata3$rels.frequency <-
c(c(1, rels[1:5])[rank(-glmdata3$duration[1:7], ties.method = "first")],
c(1, rels[6:7])[rank(-glmdata3$duration[8:10], ties.method = "first")],
c(1, rels[8:17])[rank(-glmdata3$duration[11:21], ties.method = "first")],
c(1, rels[18:22])[rank(-glmdata3$duration[22:28], ties.method = "first")])
model.frequency <-
glm(NoOfClaims ~ weight_group + Climate + ActivityCode + age_group + offset(log(Duration)),
data = glmdata2, family = poisson)
rels <- coef(model.frequency)
rels <- exp(rels[1] + rels[-1])/exp(rels[1])
glmdata3$rels.frequency <-
c(c(1, rels[1:5])[rank(-glmdata3$duration[1:7], ties.method = "first")],
c(1, rels[6:7])[rank(-glmdata3$duration[8:10], ties.method = "first")],
c(1, rels[8:17])[rank(-glmdata3$duration[11:21], ties.method = "first")],
c(1, rels[18:22])[rank(-glmdata3$duration[22:28], ties.method = "first")])
glmdata <- read.table("Tractors.csv", header=TRUE, sep=";", dec="," )
glmdata$weight_group <- cut(glmdata$Weight,
breaks = c(-Inf, 500, 1000, 2000, 3000, 4000, 5000, Inf),
labels = c("00_<500kg", "01_500-1000kg", "02_1000-1999kg", "03_2000-2999kg", "04_3000-3999kg", "05_4000-4999kg", "06_>=5000kg"),
right = FALSE)
glmdata$age_group <- cut(glmdata$VehicleAge,
breaks = c(-Inf, 2, 5, 10, 15, 20, 30, Inf),
labels = c("00_<2yr", "01_3-5yr", "02_5-10yr", "03_10-15yr", "04_15-20yr", "05_20-30yr", "06_>=30yr"),
right = FALSE)
# Det enda man behöver öndra här är s.a. man skickar med den nya feature:n
glmdata2 <- aggregate(glmdata[,6:8],by=list(weight_group = glmdata$weight_group,
age_group = glmdata$age_group,
Climate = glmdata$Climate,
ActivityCode = glmdata$ActivityCode), FUN=sum, na.rm=TRUE)
glmdata3 <-
data.frame(rating.factor =
c(rep("Weight", nlevels(glmdata2$weight_group)),
rep("Climate", nlevels(glmdata2$Climate)),
rep("ActivityCode", nlevels(glmdata2$ActivityCode)),
rep("Age", nlevels(glmdata2$age_group))),
class =
c(levels(glmdata2$weight_group),
levels(glmdata2$Climate),
levels(glmdata2$ActivityCode),
levels(glmdata2$age_group)),
stringsAsFactors = FALSE)
# nclaims: antalet claims för traktorer som uppfyller radegenskapen
# sums: summan av försäkringstiden för traktorer som uppfyller radegenskapen
new.cols <-
foreach (rating.factor = c("weight_group", "Climate", "ActivityCode", "age_group"),
.combine = rbind) %do%
{
nclaims <- tapply(glmdata2$NoOfClaims, glmdata2[[rating.factor]], sum)
sums <- tapply(glmdata2$Duration, glmdata2[[rating.factor]], sum)
n.levels <- nlevels(glmdata2[[rating.factor]])
contrasts(glmdata2[[rating.factor]]) <- contr.treatment(n.levels)[rank(-sums, ties.method = "first"), ]
data.frame(duration = sums, n.claims = nclaims)
}
glmdata3 <- cbind(glmdata3, new.cols)
rm(new.cols)
model.frequency <-
glm(NoOfClaims ~ weight_group + Climate + ActivityCode + age_group + offset(log(Duration)),
data = glmdata2, family = poisson)
rels <- coef(model.frequency)
rels <- exp(rels[1] + rels[-1])/exp(rels[1])
glmdata3$rels.frequency <-
c(c(1, rels[1:5])[rank(-glmdata3$duration[1:7], ties.method = "first")],
c(1, rels[6:7])[rank(-glmdata3$duration[8:10], ties.method = "first")],
c(1, rels[8:17])[rank(-glmdata3$duration[11:21], ties.method = "first")],
c(1, rels[18:22])[rank(-glmdata3$duration[22:28], ties.method = "first")])
glmdata3$rels.frequency <-
c(c(1, rels[1:6])[rank(-glmdata3$duration[1:7], ties.method = "first")],
c(1, rels[7:8])[rank(-glmdata3$duration[8:10], ties.method = "first")],
c(1, rels[9:18])[rank(-glmdata3$duration[11:21], ties.method = "first")],
c(1, rels[19:24])[rank(-glmdata3$duration[22:28], ties.method = "first")])
glmdata2$avgclaim=glmdata2$ClaimCost/glmdata2$NoOfClaims
model.severity <-
glm(avgclaim ~ weight_group + Climate + ActivityCode + age_group,
data = glmdata2[glmdata2$avgclaim>0,], family = Gamma("log"), weight=NoOfClaims)
rels <- coef(model.severity)
rels <- exp( rels[1] + rels[-1] ) / exp( rels[1] )
glmdata3$rels.severity <-
c(c(1, rels[1:5])[rank(-glmdata3$duration[1:6], ties.method = "first")],
c(1, rels[6:7])[rank(-glmdata3$duration[7:9], ties.method = "first")],
c(1, rels[8:17])[rank(-glmdata3$duration[10:20], ties.method = "first")],
c(1, rels[18:22])[rank(-glmdata3$duration[21:26], ties.method = "first")])
# Finally, the final risk factor is calculated, as the product of the frequency and severity factors.
##### You should not have to modify this coed.
##### Congratulations! You now have a model for the risk!
glmdata3$rels.risk <- with(glmdata3, rels.frequency*rels.severity)
# First, long variable names need to be cut, to fit into the plots.
# This row of code cuts away everything except for the first letter for variable names belonging to activity codes.
##### If you have long variable names, modify here to cut them.
glmdata3[glmdata3$rating.factor == "ActivityCode",2] <- substr(glmdata3$class,1,1)[10:20]
p1 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=1) +theme(axis.text.x = element_text(angle = 30, hjust = 1))
p2 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)+theme(axis.text.x = element_text(angle = 30, hjust = 1))
p3 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=1.6)+theme(axis.text.x = element_text(angle = 30, hjust = 1))
p4 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=0.05)
p5 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.1)
p6 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=0.1)
p7 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=0.5)
p8 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)
p9 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=0.5)
p10 <- ggplot(subset(glmdata3, rating.factor=="Age"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Age: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=0.5)
p11 <- ggplot(subset(glmdata3, rating.factor=="Age"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Age: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)
p12 <- ggplot(subset(glmdata3, rating.factor=="Age"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Age: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=0.5)
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12, cols=4)
glmdata3$rels.severity <-
c(c(1, rels[1:5])[rank(-glmdata3$duration[1:6], ties.method = "first")],
c(1, rels[6:7])[rank(-glmdata3$duration[7:9], ties.method = "first")],
c(1, rels[8:17])[rank(-glmdata3$duration[10:20], ties.method = "first")],
c(1, rels[18:22])[rank(-glmdata3$duration[21:26], ties.method = "first")])
glmdata3$rels.frequency <-
c(c(1, rels[1:6])[rank(-glmdata3$duration[1:7], ties.method = "first")],
c(1, rels[7:8])[rank(-glmdata3$duration[8:10], ties.method = "first")],
c(1, rels[9:18])[rank(-glmdata3$duration[11:21], ties.method = "first")],
c(1, rels[19:26])[rank(-glmdata3$duration[22:28], ties.method = "first")])
glmdata2$avgclaim=glmdata2$ClaimCost/glmdata2$NoOfClaims
model.severity <-
glm(avgclaim ~ weight_group + Climate + ActivityCode + age_group,
data = glmdata2[glmdata2$avgclaim>0,], family = Gamma("log"), weight=NoOfClaims)
rels <- coef(model.severity)
rels <- exp( rels[1] + rels[-1] ) / exp( rels[1] )
glmdata3$rels.severity <-
c(c(1, rels[1:6])[rank(-glmdata3$duration[1:6], ties.method = "first")],
c(1, rels[7:8])[rank(-glmdata3$duration[7:9], ties.method = "first")],
c(1, rels[9:18])[rank(-glmdata3$duration[10:20], ties.method = "first")],
c(1, rels[19:26])[rank(-glmdata3$duration[21:26], ties.method = "first")])
# Finally, the final risk factor is calculated, as the product of the frequency and severity factors.
##### You should not have to modify this coed.
##### Congratulations! You now have a model for the risk!
glmdata3$rels.risk <- with(glmdata3, rels.frequency*rels.severity)
# First, long variable names need to be cut, to fit into the plots.
# This row of code cuts away everything except for the first letter for variable names belonging to activity codes.
##### If you have long variable names, modify here to cut them.
glmdata3[glmdata3$rating.factor == "ActivityCode",2] <- substr(glmdata3$class,1,1)[10:20]
model.severity <-
glm(avgclaim ~ weight_group + Climate + ActivityCode + age_group,
data = glmdata2[glmdata2$avgclaim>0,], family = Gamma("log"), weight=NoOfClaims)
rels <- coef(model.severity)
rels <- exp( rels[1] + rels[-1] ) / exp( rels[1] )
glmdata3$rels.severity <-
c(c(1, rels[1:6])[rank(-glmdata3$duration[1:6], ties.method = "first")],
c(1, rels[7:8])[rank(-glmdata3$duration[7:9], ties.method = "first")],
c(1, rels[9:18])[rank(-glmdata3$duration[10:20], ties.method = "first")],
c(1, rels[19:26])[rank(-glmdata3$duration[21:26], ties.method = "first")])
glmdata3$rels.severity <-
c(c(1, rels[1:6])[rank(-glmdata3$duration[1:6], ties.method = "first")],
c(1, rels[7:8])[rank(-glmdata3$duration[7:9], ties.method = "first")],
c(1, rels[9:18])[rank(-glmdata3$duration[10:20], ties.method = "first")],
c(1, rels[19:26])[rank(-glmdata3$duration[21:28], ties.method = "first")])
# Finally, the final risk factor is calculated, as the product of the frequency and severity factors.
##### You should not have to modify this coed.
##### Congratulations! You now have a model for the risk!
glmdata3$rels.risk <- with(glmdata3, rels.frequency*rels.severity)
# First, long variable names need to be cut, to fit into the plots.
# This row of code cuts away everything except for the first letter for variable names belonging to activity codes.
##### If you have long variable names, modify here to cut them.
glmdata3[glmdata3$rating.factor == "ActivityCode",2] <- substr(glmdata3$class,1,1)[10:20]
p1 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=1) +theme(axis.text.x = element_text(angle = 30, hjust = 1))
p2 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)+theme(axis.text.x = element_text(angle = 30, hjust = 1))
p3 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=1.6)+theme(axis.text.x = element_text(angle = 30, hjust = 1))
p4 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=0.05)
p5 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.1)
p6 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=0.1)
p7 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=0.5)
p8 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)
p9 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=0.5)
p10 <- ggplot(subset(glmdata3, rating.factor=="Age"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Age: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=0.5)
p11 <- ggplot(subset(glmdata3, rating.factor=="Age"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Age: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)
p12 <- ggplot(subset(glmdata3, rating.factor=="Age"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Age: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=0.5)
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12, cols=4)
glmdata3[glmdata3$rating.factor == "Age",2] <- substr(glmdata3$class,1,1)[10:20]
glmdata3[glmdata3$rating.factor == "Weight",2] <- substr(glmdata3$class,1,1)[10:20]
# First, long variable names need to be cut, to fit into the plots.
# This row of code cuts away everything except for the first letter for variable names belonging to activity codes.
##### If you have long variable names, modify here to cut them.
glmdata3[glmdata3$rating.factor == "ActivityCode",2] <- substr(glmdata3$class,1,1)[10:20]
# First, long variable names need to be cut, to fit into the plots.
# This row of code cuts away everything except for the first letter for variable names belonging to activity codes.
##### If you have long variable names, modify here to cut them.
glmdata3[glmdata3$rating.factor == "ActivityCode",2] <- substr(glmdata3$class,1,1)[11:21]
glmdata3[glmdata3$rating.factor == "Age",2] <- substr(glmdata3$class,1,1)[1:7]
glmdata3[glmdata3$rating.factor == "Weight",2] <- substr(glmdata3$class,1,1)[10:20]
# First, long variable names need to be cut, to fit into the plots.
# This row of code cuts away everything except for the first letter for variable names belonging to activity codes.
##### If you have long variable names, modify here to cut them.
glmdata3[glmdata3$rating.factor == "ActivityCode",2] <- substr(glmdata3$class,1,1)[11:21]
glmdata3[glmdata3$rating.factor == "Age",2] <- substr(glmdata3$class,1,1)[22:28]
glmdata3[glmdata3$rating.factor == "Weight",2] <- substr(glmdata3$class,1,1)[1:7]
p1 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=1) +theme(axis.text.x = element_text(angle = 30, hjust = 1))
p2 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)+theme(axis.text.x = element_text(angle = 30, hjust = 1))
p3 <- ggplot(subset(glmdata3, rating.factor=="Weight"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Weight: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=1.6)+theme(axis.text.x = element_text(angle = 30, hjust = 1))
p4 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=0.05)
p5 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.1)
p6 <- ggplot(subset(glmdata3, rating.factor=="Climate"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Climate: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=0.1)
p7 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=0.5)
p8 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)
p9 <- ggplot(subset(glmdata3, rating.factor=="ActivityCode"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("ActivityCode: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=0.5)
p10 <- ggplot(subset(glmdata3, rating.factor=="Age"), aes(x=class, y=rels.frequency)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Age: frequency factors") +
geom_text(aes(label=paste(round(rels.frequency,2))), nudge_y=0.5)
p11 <- ggplot(subset(glmdata3, rating.factor=="Age"), aes(x=class, y=rels.severity)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Age: severity factors") +
geom_text(aes(label=paste(round(rels.severity,2))), nudge_y=0.5)
p12 <- ggplot(subset(glmdata3, rating.factor=="Age"), aes(x=class, y=rels.risk)) +
geom_point(colour="blue") + geom_line(aes(group=1), colour="blue") + ggtitle("Age: risk factors") +
geom_text(aes(label=paste(round(rels.risk,2))), nudge_y=0.5)
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12, cols=4)
setwd("/Users/Jessika/Documents/GitHub/SF2930-projects/project-2")
glmdata <- read.table("Tractors.csv", header=TRUE, sep=";", dec="," )
glmdata$weight_group <- cut(glmdata$Weight,
breaks = c(-Inf, 500, 1000, 2000, 3000, 4000, 5000, Inf),
labels = c("00_<500kg", "01_500-1000kg", "02_1000-1999kg", "03_2000-2999kg", "04_3000-3999kg", "05_4000-4999kg", "06_>=5000kg"),
right = FALSE)
glmdata$age_group <- cut(glmdata$VehicleAge,
breaks = c(-Inf, 2, 5, 10, 15, 20, 30, Inf),
labels = c("00_<2yr", "01_2-5yr", "02_5-10yr", "03_10-15yr", "04_15-20yr", "05_20-30yr", "06_>=30yr"),
right = FALSE)
# Det enda man behöver öndra här är s.a. man skickar med den nya feature:n
glmdata2 <- aggregate(glmdata[,6:8],by=list(weight_group = glmdata$weight_group,
age_group = glmdata$age_group,
Climate = glmdata$Climate,
ActivityCode = glmdata$ActivityCode), FUN=sum, na.rm=TRUE)
glmdata3 <-
data.frame(rating.factor =
c(rep("Weight", nlevels(glmdata2$weight_group)),
rep("Climate", nlevels(glmdata2$Climate)),
rep("ActivityCode", nlevels(glmdata2$ActivityCode)),
rep("Age", nlevels(glmdata2$age_group))),
class =
c(levels(glmdata2$weight_group),
levels(glmdata2$Climate),
levels(glmdata2$ActivityCode),
levels(glmdata2$age_group)),
stringsAsFactors = FALSE)
# nclaims: antalet claims för traktorer som uppfyller radegenskapen
# sums: summan av försäkringstiden för traktorer som uppfyller radegenskapen
new.cols <-
foreach (rating.factor = c("weight_group", "Climate", "ActivityCode", "age_group"),
.combine = rbind) %do%
{
nclaims <- tapply(glmdata2$NoOfClaims, glmdata2[[rating.factor]], sum)
sums <- tapply(glmdata2$Duration, glmdata2[[rating.factor]], sum)
n.levels <- nlevels(glmdata2[[rating.factor]])
contrasts(glmdata2[[rating.factor]]) <- contr.treatment(n.levels)[rank(-sums, ties.method = "first"), ]
data.frame(duration = sums, n.claims = nclaims)
}
glmdata3 <- cbind(glmdata3, new.cols)
rm(new.cols)
model.frequency <-
glm(NoOfClaims ~ weight_group + Climate + ActivityCode + age_group + offset(log(Duration)),
data = glmdata2, family = poisson)
rels <- coef(model.frequency)
rels <- exp(rels[1] + rels[-1])/exp(rels[1])
view(rels)
rels
3*8
